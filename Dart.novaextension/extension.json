{
  "identifier": "sciencefidelity.dart",
  "name": "Dart",
  "organization": "Matt Cook",
  "description": "Dart and Flutter tools for Nova",
  "version": "0.5.2",
  "categories": [
    "clips",
    "commands",
    "completions",
    "formatters",
    "languages",
    "sidebars",
  ],
  "license": "MIT",
  "repository": "https://github.com/sciencefidelity/Nova-Dart",
  "bugs": "https://github.com/sciencefidelity/Nova-Dart/issues",
  "homepage": "https://mattcook.dev",
  "keywords": ["dart", "flutter", "angulardart"],

  "main": "main.dist.js",

  "activationEvents": ["onLanguage:dart", "onWorkspaceContains:pubspec.yaml"],
  "entitlements": {
    "process": true,
    "filesystem": "readwrite"
  },

  "config": [
    {
      "key": "sciencefidelity.dart.config.analyzerPath",
      "title": "Dart Analyzer Path",
      "description": "The extension will attempt to find the Dart analysis server (analysis_server.dart.snapshot). If that does not work add the path here, it's located in /bin/cache/dart-sdk/bin/snapshots of your Flutter installation.",
      "type": "path",
      "placeholder": "~/flutter/bin/cache/dart-sdk/bin/snapshots"
    },
    {
      "key": "sciencefidelity.dart.config.enableAnalyzer",
      "title": "Enable Language Server",
      "type": "boolean",
      "default": true
    },
    {
      "key": "sciencefidelity.dart.config.formatDocumentOnSave",
      "title": "Format Document on Save",
      "description": "Run Format Document command on file save.",
      "type": "boolean",
      "default": true
    }
  ],

  "configWorkspace": [
    {
      "key": "sciencefidelity.dart.config.enableAnalyzer",
      "title": "Enable Language Server",
      "type": "enum",
      "values": [
        ["null", "Inherit from Global Settings"],
        ["false", "Disable"],
        ["true", "Enable"]
      ],
      "default": "null"
    },
    {
      "key": "sciencefidelity.dart.config.formatDocumentOnSave",
      "title": "Format Document on Save",
      "description": "Run Format Document command on file save.",
      "type": "enum",
      "values": [
        ["null", "Inherit from Global Settings"],
        ["false", "Disable"],
        ["true", "Enable"]
      ],
      "default": "null"
    }
  ],

  "sidebars": [
    {
      "id": "sciencefidelity.dart.dart.sidebar",
      "name": "Dart",
      "smallImage": "DartSidebarSmall",
      "largeImage": "DartSidebarLarge",
      "sections": [
        {
          "id": "sciencefidelity.dart.sidebar.flutterRun",
          "name": "Flutter",
          "placeholderText": "Flutter Hot Reload",
          "headerCommands": [
            {
              "title": "Run",
              "image": "FlutterRun",
              "tooltip": "Flutter run",
              "command": "sciencefidelity.dart.commands.flutterRun"
            },
            {
              "title": "Stop",
              "image": "Stop",
              "tooltip": "Stop the current app",
              "command": "sciencefidelity.dart.commands.flutterStop"
            }
          ]
        },
        {
          "id": "sciencefidelity.dart.sidebar.info",
          "name": "Information",
          "placeholderText": "Dart Extension Information",
          "headerCommands": [
            {
              "title": "Refresh",
              "image": "__builtin.refresh",
              "tooltip": "Reload the Dart LSP",
              "command": "sciencefidelity.dart.commands.reloadLsp"
            }
          ]
        }
      ]
    }
  ],

  "commands": {
    "extensions": [
      {
        "title": "Create New Flutter App",
        "command": "sciencefidelity.dart.commands.flutterCreate"
      },
      {
        "title": "Preferences",
        "command": "sciencefidelity.dart.commands.openWorkspaceConfig"
      },
      {
        "title": "Restart Server",
        "command": "sciencefidelity.dart.commands.reloadLsp"
      }
    ],
    "editor": [
      {
        "title": "Flutter Run",
        "command": "sciencefidelity.dart.commands.flutterRun"
      },
      {
        "title": "Flutter Stop",
        "command": "sciencefidelity.dart.commands.flutterStop"
      },
      {
        "title": "Format",
        "command": "sciencefidelity.dart.commands.formatDocument",
        "shortcut": "option-shift-f",
        "filters": {
          "syntaxes": ["dart"]
        }
      },
      {
        "title": "Open iOS Simulator",
        "command": "sciencefidelity.dart.commands.openSimulator",
        "shortcut": "option-shift-o"
      },
      {
        "title": "Open Android Emulator",
        "command": "sciencefidelity.dart.commands.openEmulator",
        "shortcut": "option-shift-a"
      },
      {
        "title": "Get Flutter Dependencies",
        "command": "sciencefidelity.dart.commands.getDependencies",
        "shortcut": "option-shift-p"
      },
      {
        "title": "Organize Imports",
        "command": "sciencefidelity.dart.commands.organizeImports",
        "filters": {
          "syntaxes": ["dart"]
        }
      }
    ]
  }
}
